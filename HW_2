Часть 1
http://______________/user_info_3

1. Отправить запрос. Метод Get.
This is the first responce from server!ss

2. Статус код 200 200OK

3. Проверить, что в body приходит правильный string.
сниппет response body: Contains string
pm.test("Body matches string", function () {
    pm.expect(pm.response.text()).to.include("This is the first responce from server!ss");
});


http://______________/user_info_3

1. Отправить запрос. Метод POST.
2. Статус код 200 200OK
3. Спарсить response body в json.
сниппет response body: JSON value check
let resp_f = pm.response.json();

4. Проверить, что name в ответе равно name в request (name вбить руками)
var resp_f = pm.response.json();
let req_f = request.data
let req_name = req_f.name
let resp_name = resp_f.name

pm.test("Check_name", function () {
       pm.expect(“Kate”).to.eql
(resp_name);
});
console.log(req_f)
console.log("req_name = " + req_name + " resp_name = " + resp_name)

req_name = Kate resp_name = Kate

5. Проверить, что age в ответе равно age s request (age вбить руками)
var resp_f = pm.response.json();
let req_f = request.data
let req_age = req_f.age
let resp_age = resp_f.age

pm.test("Check_age", function () {
   
    pm.expect('35').to.eql
(resp_age);
});

console.log("req_age = " + req_age + " resp_age = " + resp_age)

6. Проверить, что salary в ответе равно salary s request (salary вбить руками.)
var resp_f = pm.response.json();
let req_f = request.data
let req_salary = +req_f.salary
let resp_salary = +resp_f.salary

pm.test("Check_salary", function () {
   
    pm.expect(1000).to.eql
(resp_salary);
});

console.log("req_salary = " + req_salary + " resp_salary = " + resp_salary)

req_salary = 1000 resp_salary = 1000

7. Спарсить request.
let req_f = request.data
console.log(req_f)
{name: "Kate", age: "35", salary: "1000"}

8. Проверить, что name в ответе равно name в request (name забрать из request.)
var resp_f = pm.response.json();
let req_f = request.data
let req_name = req_f.name
let resp_name = resp_f.name

pm.test("Check_name", function () {
       pm.expect(req_name).to.eql
(resp_name);
});
console.log(req_f)
console.log("req_name = " + req_name + " resp_name = " + resp_name)

req_name = Kate resp_name = Kate

9. Проверить, что age в ответе равно age s request (age забрать из request.)
var resp_f = pm.response.json();
let req_f = request.data
let req_age = req_f.age
let resp_age = resp_f.age

pm.test("Check_age", function () {
   
    pm.expect(req_age).to.eql
(resp_age);
});

10. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
var resp_f = pm.response.json();
let req_f = request.data
let req_salary = +req_f.salary
let resp_salary = +resp_f.salary

pm.test("Check_salary", function () {
   
    pm.expect(req_salary).to.eql
(resp_salary);
});

console.log("req_salary = " + req_salary + " resp_salary = " + resp_salary)

req_salary = 1000 resp_salary = 1000

11. Вывести в консоль параметр family из response.
console.log(resp_f.family)

12. Проверить что u_salary_1_5_year в ответе равно salary*4 (salary забрать из request)
let req_f = request.data
let resp_f = pm.response.json();

let req_salary = req_f.salary
let resp_salary_1_5_year = req_salary*4

pm.test("u_salary_1_5_year", function () {
   
    pm.expect(resp_salary_1_5_year).to.eql
(req_salary*4);
});
console.log("u_salary_1_5_year = " + req_salary + " salary*4 = " + resp_salary_1_5_year)
u_salary_1_5_year = 1000 salary*4 = 4000

http://______________/object_info_3
1. Отправить запрос. Метод GET, ключ и значения ввести в парамс, удалить из боди
2. Статус код 200 200OK
3. Спарсить response body в json.
let resp_p = pm.response.json();
console.log(resp_p)

4. Спарсить request.
let resp_p = pm.request.url.query.toObject()
console.log(resp_p)

5. Проверить, что name в ответе равно name в request (name забрать из request.)
let req_p = pm.request.url.query.toObject();
var resp_p = pm.response.json();
let resp_name = resp_p.name
let req_name = req_p.name
pm.test("Check_name", function () {
       pm.expect(req_name).to.eql
(resp_name);
});

console.log("req_name = " + req_name + " resp_name = " + resp_name) или
console.log(req_name + " = " + resp_name)


6. Проверить, что age в ответе равно age s request (age забрать из request.)
let req_p = pm.request.url.query.toObject();
var resp_p = pm.response.json();

let req_age = req_p.age
let resp_age = resp_p.age

pm.test("Check_age", function () {
       pm.expect(req_age).to.eql
(resp_age);
});

console.log(req_age + " = " + resp_age)


7. Проверить, что salary в ответе равно salary s request (salary забрать из request.)
let req_p = pm.request.url.query.toObject();
let resp_p = pm.response.json();

let req_salary = +req_p.salary
let resp_salary = +resp_p.salary

pm.test("Check_salary", function () {
       pm.expect(req_salary).to.eql
(resp_salary);
});

console.log(req_salary + " = " + resp_salary)

8. Вывести в консоль параметр family из response.
let resp_p = pm.response.json();
console.log(resp_p.family)

9. Проверить, что у параметра dog есть параметры name.
let resp_p = pm.response.json();
let dog_name = resp_p.family.pets.dog
pm.test("dog_have_name", function () {
pm.expect(dog_name).to.have.property("name");
});
ИЛИ
let resp_p = pm.response.json();
pm.test("dog_have_name", function () {
pm.expect(resp_p.family.pets.dog).to.have.property("name");
});

10. Проверить, что у параметра dog есть параметры age.
let resp_p = pm.response.json();
pm.test("dog_have_age", function () {
pm.expect(resp_p.family.pets.dog).to.have.property("age");
});

11. Проверить, что параметр name имеет значение Luky.
let resp_p = pm.response.json();
pm.test("dog_Luky", function () {
pm.expect(resp_p.family.pets.dog.name).to.eql("Luky");
});

12. Проверить, что параметр age имеет значение 4.
let resp_p = pm.response.json();
pm.test("dog_age_4", function () {
pm.expect(resp_p.family.pets.dog.age).to.eql(4);
});

http://______________/object_info_4

1. Отправить запрос. Метод GET, ключ и значения ввести в парамс, удалить из боди
2. Статус код 200 200OK
3. Спарсить response body в json.
let resp_p = pm.response.json();
console.log(resp_p)

4. Спарсить request.
let resp_p = pm.request.url.query.toObject()
console.log(resp_p)

5. Проверить, что name в ответе равно name в request (name забрать из request.)
let req_p = pm.request.url.query.toObject();
let resp_p = pm.response.json();
pm.test("Check_name", function () {
       pm.expect(req_p.name).to.eql
(resp_p.name);
});
console.log(req_p.name + " = " + resp_p.name)

6. Проверить, что age в ответе равно age из request (age забрать из request.)
let req_p = pm.request.url.query.toObject();
let resp_p = pm.response.json();
pm.test("Check_age", function () {
       pm.expect(+req_p.age).to.eql
(+resp_p.age);
});
console.log(req_p.age + " = " + resp_p.age)

7. Вывести в консоль параметр salary из request.
let req_p = pm.request.url.query.toObject();
console.log(req_p.salary)
1000

8. Вывести в консоль параметр salary из response.
let resp_p = pm.response.json();
console.log(resp_p.salary)

(3) [1000, "2000", "3000"]
1.	 0: 1000
2.	 1: "2000"
3.	 2: "3000"

9. Вывести в консоль 0-й элемент параметра salary из response.
let resp_p = pm.response.json();
let salary_0 = +resp_p.salary [0]
pm.test("salary_0", function () {
   
    pm.expect(salary_0).to.eql(1000);
});
console.log(salary_0)

10. Вывести в консоль 1-й элемент параметра salary параметр salary из response.
let resp_p = pm.response.json();
console.log(+resp_p.salary [1])
});

11. Вывести в консоль 2-й элемент параметра salary параметр salary из response.
let resp_p = pm.response.json();
console.log(+resp_p.salary [2])


12. Проверить, что 0-й элемент параметра salary равен salary из request (salary забрать из request.)
let req_p = pm.request.url.query.toObject();
let resp_p = pm.response.json();
pm.test("salary_0_resp eql salary_1_req", function () {
       pm.expect(+resp_p.salary [0]).to.eql(+req_p.salary);
});


13. Проверить, что 1-й элемент параметра salary равен salary*2 из request (salary забрать из request.)
let req_p = pm.request.url.query.toObject();
let resp_p = pm.response.json();
pm.test("salary_1_resp eql salary_2_req", function () {
       pm.expect(+resp_p.salary [1]).to.eql(+req_p.salary*2);
});


14. Проверить, что 2-й элемент параметра salary равен salary*3 из request (salary забрать из request.)
let req_p = pm.request.url.query.toObject();
let resp_p = pm.response.json();
pm.test("salary_2_resp eql salary_3_req", function () {
       pm.expect(+resp_p.salary [2]).to.eql(+req_p.salary*3);
});

15. Создать в окружении переменную name
Зайти в окружение, отредактировать, вставив в key переменную name

16. Создать в окружении переменную age
Зайти в окружение, отредактировать, вставив в key переменную age

17. Создать в окружении переменную salary
Зайти в окружение, отредактировать, вставив в key переменную salary

18. Передать в окружение переменную name
pm.environment.set("name", "Kate")

19. Передать в окружение переменную age
pm.environment.set("age", '35')

20. Передать в окружение переменную salary
pm.environment.set("salary", 1000)

21. Написать цикл который выведет в консоль по порядку элементы списка из параметра salary.
let salary = resp.salary.lenght
for (let i = 0; i < resp.salary.lenght; i +=1){console.log(resp.salary)}
Перепроверить!!!
for (let resp.salary = 0; i < 3; resp.salary +=1){
console.log(resp.salary[i]);}
Перепроверить!!!
For (i=0; i<3; i++)
let resp_p = pm.response.json();
for (let i = 0; i < 0; resp_p.salary.length +=1){
console.log(resp_.salary[i]);
}


Часть 2
http://______________/user_info_2

1. Вставить параметр salary из окружения в request
2. Вставить параметр age из окружения в age
3. Вставить параметр name из окружения в name
В окружение уже введены переменные и их значения ранее. Нужно в боди в форм-дату ввести в кей текстом название переменной. В вэлью ввести переменные в виде {{name}}

4. Отправить запрос. Метод POST.
5. Статус код 200 200OK

6. Спарсить response body в json.
let resp_f = pm.response.json();
console.log(resp_f)
ответ {person: {…}, qa_salary_after_1.5_year: 3300, qa_salary_after_12_months: 2700…}

7. Спарсить request.
let req_f = request.data
console.log(req_f)
ответ {name: "Kate", age: "35", salary: "1000"}

8. Проверить, что json response имеет параметр start_qa_salary
let resp_f = pm.response.json();
pm.test("Have start_qa_salary property", function () {
   
    pm.expect(resp_f).to.have.property("start_qa_salary");
});

9. Проверить, что json response имеет параметр qa_salary_after_6_months
let resp_f = pm.response.json();
pm.test("Have qa_salary_after_6_months property", function () {
       pm.expect(resp_f).to.have.property("qa_salary_after_6_months");
});

10. Проверить, что json response имеет параметр qa_salary_after_12_months
let resp_f = pm.response.json();
pm.test("Have qa_salary_after_12_months property", function () {
   
    pm.expect(resp_f).to.have.property("qa_salary_after_12_months");
});

11. Проверить, что json response имеет параметр qa_salary_after_1.5_year
let resp_f = pm.response.json();
pm.test("Have qa_salary_after_1.5_year property", function () {
   
    pm.expect(resp_f).to.have.property("qa_salary_after_1.5_year");
});


12. Проверить, что json response имеет параметр qa_salary_after_3.5_years
let resp_f = pm.response.json();
pm.test("Have qa_salary_after_3.5_years property", function () {
   
    pm.expect(resp_f).to.have.property("qa_salary_after_3.5_years");
});

13. Проверить, что json response имеет параметр person
let resp_f = pm.response.json();
pm.test("Have person property", function () {
   
    pm.expect(resp_f).to.have.property("person");
});
console.log(resp_f)
ответ {person: {…}, qa_salary_after_1.5_year: 3300, qa_salary_after_12_months: 2700…}

14. Проверить, что параметр start_qa_salary равен salary из request (salary забрать из request.)
let resp_f = pm.response.json();
let req_f = request.data;
pm.test("Check start_qa_salary", function () {
   
    pm.expect(+resp_f.start_qa_salary).to.eql(+req_f.salary);
});
console.log(resp_f.start_qa_salary + " = " + req_f.salary)
 
ответ 1000 = 1000

15. Проверить, что параметр qa_salary_after_6_months равен salary*2 из request (salary забрать из request.)
let resp_f = pm.response.json();
let req_f = request.data;
pm.test("Check qa_salary_after_6_months", function () {
   
    pm.expect(+resp_f.qa_salary_after_6_months).to.eql(+req_f.salary*2);
});
console.log(resp_f.qa_salary_after_6_months + " = " + req_f.salary*2)

16. Проверить, что параметр qa_salary_after_12_months равен salary*2.7 из request (salary забрать из request.)
let resp_f = pm.response.json();
let req_f = request.data;
pm.test("Check qa_salary_after_12_months", function () {
   
    pm.expect(+resp_f.qa_salary_after_12_months).to.eql(+req_f.salary*2.7);
});
console.log(resp_f.qa_salary_after_12_months + " = " + req_f.salary*2.7)

17. Проверить, что параметр qa_salary_after_1.5_year равен salary*3.3 из request (salary забрать из request.)
let resp_f = pm.response.json();
let req_f = request.data;
pm.test("Check qa_salary_after_1.5_year", function () {
   
    pm.expect(+resp_f["qa_salary_after_1.5_year"]).to.eql(+req_f.salary*3.3);
});

console.log(resp_f["qa_salary_after_1.5_year"] + " = " + req_f.salary*3.3)

18. Проверить, что параметр qa_salary_after_3.5_years равен salary*3.8 из request (salary забрать из request.)
let resp_f = pm.response.json();
let req_f = request.data;
pm.test("Check qa_salary_after_3.5_years", function () {
       pm.expect(+resp_f["qa_salary_after_3.5_years"]).to.eql(+req_f.salary*3.8);
});
console.log(resp_f["qa_salary_after_3.5_years"] + " = " + req_f.salary*3.8) 

19. Проверить, что в параметре person, 1-й элемент из u_name равен salary из request (salary забрать из request.)
let resp_f = pm.response.json();
let req_f = request.data;
pm.test("Check salary u_name", function () {
       pm.expect(+resp_f.person.u_name [1]).to.eql(+req_f.salary);
});
console.log(+resp_f.person.u_name [1] + " = " +req_f.salary) 

20. Проверить, что что параметр u_age равен age из request (age забрать из request.)
let resp_f = pm.response.json();
let req_f = request.data;
pm.test("Check salary u_ age", function () {
       pm.expect(+resp_f.person.u_age).to.eql(+req_f.age);
});
console.log(+resp_f.person.u_age + " = " +req_f.age) 

21. Проверить, что параметр u_salary_5_years равен salary*4.2 из request (salary забрать из request.)
let resp_f = pm.response.json();
let req_f = request.data;
pm.test("Check u_salary_5_years", function () {
       pm.expect(+resp_f.person.u_salary_5_years).to.eql(+req_f.salary*4.2);
});
console.log(+resp_f.person.u_salary_5_years + " = " +req_f.salary*4.2)


22. ***Написать цикл который выведет в консоль по порядку элементы списка из параметра person.
